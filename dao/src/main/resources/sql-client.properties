SQL_ALL_CLIENTS=select c.client_id, c.client_name from client c order by c.client_name
SQL_CLIENT_BY_ID=select c.client_id, c.client_name from client c where client_id = :clientId
SQL_CREATE_CLIENT=insert into client(client_name) values(:clientName)
SQL_CHECK_UNIQUE_CLIENT_NAME=select count(c.client_name) from client c where lower(c.client_name) = lower(:clientName)
SQL_UPDATE_CLIENT_NAME=update client set client_name = :clientName where client_id = :clientId
SQL_DELETE_CLIENT_BY_ID=delete from client where client_id = :clientId
SQL_COUNT_CLIENT=select count(*) from client
findAllWithRepairsSql=SELECT c.client_id AS clientId, c.client_name AS clientName, count(r.client_id) AS  numberOfRepairs \
    FROM client c \
        LEFT JOIN repair r ON c.client_id = r.client_id \
    GROUP BY \
        c.client_id, c.client_name \
    ORDER BY client_name
SQL_ALL_REPAIRS=select * from repair r order by r.preference_date
SQL_GET_REPAIR_BY_ID=select r.repair_id, r.repair_type, r.address, r.difficulty_level, r.preference_date, r.client_id  \
  from repair r where r.repair_id = :repairId
SQL_CREATE_REPAIR=insert into repair(repair_type, address, difficulty_level, preference_date, client_id)  \
  values(:repairType, :address, :difficultyLevel, :preferenceDate, :clientId)
SQL_CHECK_UNIQUE_REPAIR=select count(r.address) from repair r  \
  where r.repair_type = :repairType AND r.address = :address AND r.difficulty_level = :difficultyLevel AND r.preference_date = :preferenceDate AND r.client_id = :clientId
SQL_UPDATE_REPAIR=update repair set repair_type = :repairType, address = :address, difficulty_level = :difficultyLevel, \
   preference_date = :preferenceDate, client_id = :clientId  where repair_id = :repairId
SQL_DELETE_REPAIR_BY_ID=delete from repair where repair_id = :repairId
SQL_FIND_REPAIR_BY_DATE_FROM_TO=select * from repair where preference_date between :startLimitDate AND :endLimitDate  \
  order by preference_date
SQL_COUNT_REPAIRS=select count(*) from repair